name: modules-api-ref-docs-sync

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  modules-api-ref-docs-sync:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: generate modules-api-ref.md
      run: |
        git fetch origin --tags
        utils/generate-module-api-doc.rb > generated-modules-api-ref.md

    - name: get token, apply patch and push changes
      env:
        APP_ID: ${{ secrets.DOCS_APP_ID }}
        PEM: ${{ secrets.DOCS_APP_PRIVATE_KEY }}
        REGISTRATION_ID: ${{ secrets.DOCS_APP_REGISTRATION_ID }}
        RELEASE_NAME: ${{ github.event.release.tag_name }}
      run: |
        set -o pipefail

        now=$(date +%s)
        iat=$((${now} - 60)) # Issues 60 seconds in the past
        exp=$((${now} + 600)) # Expires 10 minutes in the future

        b64enc() { openssl base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n'; }

        header_json='{
            "typ":"JWT",
            "alg":"RS256"
        }'
        # Header encode
        header=$( echo -n "${header_json}" | b64enc )

        payload_json='{
            "iat":'"${iat}"',
            "exp":'"${exp}"',
            "iss":'"${APP_ID}"'
        }'
        # Payload encode
        payload=$( echo -n "${payload_json}" | b64enc )

        # Signature
        header_payload="${header}"."${payload}"
        signature=$(
            openssl dgst -sha256 -sign <(echo -n "${PEM}") \
            <(echo -n "${header_payload}") | b64enc
        )

        # Create JWT
        JWT="${header_payload}"."${signature}"

        GH_TOKEN=$(curl -s --request POST --url "https://api.github.com/app/installations/${REGISTRATION_ID}/access_tokens" \
          --header "Accept: application/vnd.github+json" --header "Authorization: Bearer $JWT" \
          --header "X-GitHub-Api-Version: 2022-11-28" | jq -r '.token')

        git clone https://oauth2:${GH_TOKEN}@github.com/redis-learn/docs

        mv generated-modules-api-ref.md docs/content/develop/reference/modules/modules-api-ref.md
        cd docs
        git apply content/develop/reference/modules/modules-api-ref-frontmatter.patch
        modules_api_is_different=$(git diff content/develop/reference/modules/modules-api-ref.md)
        if [[ ! -z $modules_api_is_different ]]; then
          git add content/develop/reference/modules/modules-api-ref.md
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git config --global "url.https://${GH_TOKEN}@github.com/.insteadOf" https://github.com/
          git commit -m "Update modules-api-ref.md as part of release ${RELEASE_NAME}"
          git push origin main
        fi