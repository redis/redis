{
    "SCAN": {
        "summary": "Iterates over the key names in the database.",
        "complexity": "O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. N is the number of elements inside the collection.",
        "group": "generic",
        "since": "2.8.0",
        "arity": -2,
        "function": "scanCommand",
        "history": [
            [
                "6.0.0",
                "Added the `TYPE` subcommand."
            ]
        ],
        "command_flags": [
            "READONLY",
            "TOUCHES_ARBITRARY_KEYS"
        ],
        "acl_categories": [
            "KEYSPACE"
        ],
        "command_tips": [
            "NONDETERMINISTIC_OUTPUT",
            "REQUEST_POLICY:SPECIAL",
            "RESPONSE_POLICY:SPECIAL"
        ],
        "arguments": [
            {
                "name": "cursor",
                "type": "integer"
            },
            {
                "token": "MATCH",
                "name": "pattern",
                "type": "pattern",
                "optional": true
            },
            {
                "token": "COUNT",
                "name": "count",
                "type": "integer",
                "optional": true
            },
            {
                "token": "TYPE",
                "name": "type",
                "type": "string",
                "optional": true,
                "since": "6.0.0"
            }
        ],
        "reply_schema": {
            "description": "cursor and scan response in array form",
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "items": [
                {
                    "description": "cursor",
                    "type": "string"
                },
                {
                    "description": "list of keys",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            ]
        }
    }
}
